(function() {
  var ActivatePowerMode, CompositeDisposable, throttle;

  throttle = require("lodash.throttle");

  CompositeDisposable = require('atom').CompositeDisposable;

  module.exports = ActivatePowerMode = {
    activatePowerModeView: null,
    modalPanel: null,
    subscriptions: null,
    activate: function(state) {
      this.subscriptions = new CompositeDisposable;
      this.subscriptions.add(atom.commands.add("atom-workspace", {
        "activate-power-mode:toggle": (function(_this) {
          return function() {
            return _this.toggle();
          };
        })(this)
      }));
      this.throttledShake = throttle(this.shake.bind(this), 100, {
        trailing: false
      });
      this.throttledSpawnParticles = throttle(this.spawnParticles.bind(this), 25, {
        trailing: false
      });
      this.editor = atom.workspace.getActiveTextEditor();
      this.editorElement = atom.views.getView(this.editor);
      this.editorElement.classList.add("power-mode");
      this.subscriptions.add(this.editor.getBuffer().onDidChange(this.onChange.bind(this)));
      return this.setupCanvas();
    },
    setupCanvas: function() {
      this.canvas = document.createElement("canvas");
      this.context = this.canvas.getContext("2d");
      this.canvas.classList.add("power-mode-canvas");
      this.canvas.width = this.editorElement.offsetWidth;
      this.canvas.height = this.editorElement.offsetHeight;
      return this.editorElement.parentNode.appendChild(this.canvas);
    },
    calculateCursorOffset: function() {
      var editorRect, scrollViewRect;
      editorRect = this.editorElement.getBoundingClientRect();
      scrollViewRect = this.editorElement.shadowRoot.querySelector(".scroll-view").getBoundingClientRect();
      return {
        top: scrollViewRect.top - editorRect.top + this.editor.getLineHeightInPixels() / 2,
        left: scrollViewRect.left - editorRect.left
      };
    },
    onChange: function(e) {
      var range, spawnParticles;
      spawnParticles = true;
      if (e.newText) {
        spawnParticles = e.newText !== "\n";
        range = e.newRange.end;
      } else {
        range = e.newRange.start;
      }
      if (spawnParticles) {
        this.throttledSpawnParticles(range);
      }
      return this.throttledShake();
    },
    shake: function() {
      var intensity, x, y;
      intensity = 1 + 2 * Math.random();
      x = intensity * (Math.random() > 0.5 ? -1 : 1);
      y = intensity * (Math.random() > 0.5 ? -1 : 1);
      this.editorElement.style.top = "" + y + "px";
      this.editorElement.style.left = "" + x + "px";
      return setTimeout((function(_this) {
        return function() {
          _this.editorElement.style.top = "";
          return _this.editorElement.style.left = "";
        };
      })(this), 75);
    },
    spawnParticles: function(range) {
      var color, cursorOffset, left, numParticles, part, top, _ref, _results;
      cursorOffset = this.calculateCursorOffset();
      _ref = this.editor.pixelPositionForScreenPosition(range), left = _ref.left, top = _ref.top;
      left += cursorOffset.left - this.editor.getScrollLeft();
      top += cursorOffset.top - this.editor.getScrollTop();
      color = this.getColorAtPosition(left, top);
      numParticles = 5 + Math.round(Math.random() * 10);
      _results = [];
      while (numParticles--) {
        part = this.createParticle(left, top, color);
        this.particles[this.particlePointer] = part;
        _results.push(this.particlePointer = (this.particlePointer + 1) % 500);
      }
      return _results;
    },
    getColorAtPosition: function(left, top) {
      var el, offset;
      offset = this.editorElement.getBoundingClientRect();
      el = atom.views.getView(this.editor).shadowRoot.elementFromPoint(left + offset.left, top + offset.top);
      if (el) {
        return getComputedStyle(el).color;
      } else {
        return "rgb(255, 255, 255)";
      }
    },
    createParticle: function(x, y, color) {
      return {
        x: x,
        y: y,
        alpha: 1,
        color: color,
        velocity: {
          x: -1 + Math.random() * 2,
          y: -3.5 + Math.random() * 2
        }
      };
    },
    drawParticles: function() {
      var particle, _i, _len, _ref, _results;
      requestAnimationFrame(this.drawParticles.bind(this));
      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
      _ref = this.particles;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        particle = _ref[_i];
        if (particle.alpha <= 0.1) {
          continue;
        }
        particle.velocity.y += 0.075;
        particle.x += particle.velocity.x;
        particle.y += particle.velocity.y;
        particle.alpha *= 0.96;
        this.context.fillStyle = "rgba(" + particle.color.slice(4, -1) + ", " + particle.alpha + ")";
        _results.push(this.context.fillRect(Math.round(particle.x - 1.5), Math.round(particle.y - 1.5), 3, 3));
      }
      return _results;
    },
    toggle: function() {
      console.log('ActivatePowerMode was toggled!');
      this.particlePointer = 0;
      this.particles = [];
      return requestAnimationFrame(this.drawParticles.bind(this));
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/home/xy/.atom/packages/activate-power-mode/lib/activate-power-mode.coffee
